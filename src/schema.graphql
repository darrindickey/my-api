# import User from './../database/datamodel.graphql'

type Query {
  info: String!
  fetchUser(first_name: String!, last_name: String!, username: String!, email: String!): User
  user(first_name: String!, last_name: String!, username: String!, email: String!): [User]!
  users(first_name: String, last_name: String, username: String, email: String): [User]!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  first_name: String!
  last_name: String!
  username: String!
  email: String!
  password: String!
  image: String
  role: Roles!
}

enum Roles {
  ADMINISTRATOR
  REGISTERED_USER
  UNREGISTERED_USER
}